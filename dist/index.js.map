{"version":3,"sources":["../index.js"],"names":["nightmare","show","app","use","json","get","req","res","send","post","is","code","error","viewport","goto","screenshot","end","then","image64","buffer","toString","data","console","log","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,yBAAU;AACxBC,UAAM;AADkB,CAAV,CAAlB;;AAIA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;;AAEAF,IAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIC,IAAJ,CAAS,oCAAT;AACH,CAFD;;AAIAN,IAAIO,IAAJ,CAAS,GAAT,EAAc,UAACH,GAAD,EAAMC,GAAN,EAAc;AACxB,QAAI,CAAED,IAAII,EAAJ,CAAO,kBAAP,CAAN,EAAkC;AAC9BH,YAAII,IAAJ,CAAS,GAAT,EAAcP,IAAd,CAAmB,EAACQ,OAAO,0CAAR,EAAnB;AACH;;AAED,WAAOZ,UACFa,QADE,CACO,GADP,EACY,GADZ;AAEH;AACA;AACA;AAJG,KAKFC,IALE,CAKG,wBALH;AAMH;AANG,KAOFC,UAPE,GAQFC,GARE,GAWFC,IAXE,CAWG,kBAAU;AACZ,YAAMC,UAAUC,OAAOC,QAAP,CAAgB,QAAhB,CAAhB;AACA,YAAMC,OAAO,2BAA2BH,OAAxC;;AAEAI,gBAAQC,GAAR,CAAYF,IAAZ;;AAEAd,YAAIC,IAAJ,CAASa,IAAT;AACH,KAlBE,CAAP;;AAqBA;AACH,CA3BD;;AA6BAnB,IAAIsB,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnBF,YAAQC,GAAR,CAAY,qCAAZ;AACH,CAFD","file":"index.js","sourcesContent":["import express from \"express\";\r\nimport Nightmare from 'nightmare';\r\nimport bodyParser from \"body-parser\";\r\n\r\nconst nightmare = Nightmare({\r\n    show: true\r\n});\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.get('/', (req, res) => {\r\n    res.send(\"Lavachart's PNG server is running.\");\r\n});\r\n\r\napp.post('/', (req, res) => {\r\n    if (! req.is('application/json')) {\r\n        res.code(500).json({error: 'POST request must be \"application/json\".'});\r\n    }\r\n\r\n    return nightmare\r\n        .viewport(800, 600)\r\n        //.evaluate(selector => {\r\n        //    return document.querySelector(selector).innerText;\r\n        //}, selector)\r\n        .goto('https://duckduckgo.com')\r\n        //.wait(3000)\r\n        .screenshot()\r\n        .end(/*() => {\r\n            res.json({message:'Saved screenshot to ' + chartImg);\r\n        }*/)\r\n        .then(buffer => {\r\n            const image64 = buffer.toString('base64');\r\n            const data = 'data:image/png;base64,' + image64;\r\n\r\n            console.log(data);\r\n\r\n            res.send(data);\r\n        });\r\n\r\n\r\n    //res.json();\r\n});\r\n\r\napp.listen(3000, () => {\r\n    console.log('Example app listening on port 3000!');\r\n});"]}